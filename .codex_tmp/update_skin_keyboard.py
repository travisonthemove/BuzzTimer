from pathlib import Path

path = Path("script.js")
text = path.read_text(encoding="utf-8")
text = text.replace('const skinOptions = document.querySelectorAll(\'.skin-option\');', 'const skinOptions = Array.from(document.querySelectorAll(\'.skin-option\'));')
text = text.replace("skinOptions.forEach(option => {", "const focusSkinOption = (index) => {\n        skinOptions.forEach((btn, idx) => {\n            btn.tabIndex = idx === index ? 0 : -1;\n        });\n        skinOptions[index].focus();\n    };\n\n    const selectSkinOption = (option) => {\n        skinOptions.forEach(btn => {\n            btn.classList.remove('active');\n            btn.setAttribute('aria-checked', 'false');\n        });\n        option.classList.add('active');\n        option.setAttribute('aria-checked', 'true');\n        const selectedSkin = option.getAttribute('data-skin');\n        console.log(`Selected skin: ${selectedSkin}`);\n\n        const themes = ['theme-classic', 'theme-calm', 'theme-retro', 'theme-party'];\n        themes.forEach(theme => themeContainer.classList.remove(theme));\n\n        if (selectedSkin === 'calm') {\n            themeContainer.classList.add('theme-calm');\n        } else if (selectedSkin === 'retro') {\n            themeContainer.classList.add('theme-retro');\n        } else if (selectedSkin === 'partyvibe') {\n            themeContainer.classList.add('theme-party');\n        } else {\n            themeContainer.classList.add('theme-classic');\n        }\n\n        timerSkin.src = `static/skins/${selectedSkin}.svg`;\n\n        // Set the text in the p element\n        currentSkin = selectedSkin;\n        const friendlyName = themeNames[currentSkin] || 'Unknown';\n        activeThemeText.textContent = `Active Theme: ${friendlyName}`;\n\n        return selectedSkin;\n    };\n\n    skinOptions.forEach((option, index) => {")
text = text.replace("skinOptions.forEach(o => o.classList.remove('active'));\n            option.classList.add('active');\n\n            const selectedSkin = option.getAttribute('data-skin');\n            console.log(`Selected skin: ${selectedSkin}`);\n\n            const themes = ['theme-classic', 'theme-calm', 'theme-retro', 'theme-party'];\n            themes.forEach(theme => themeContainer.classList.remove(theme));\n\n            if (selectedSkin === 'calm') {\n                themeContainer.classList.add('theme-calm');\n            } else if (selectedSkin === 'retro') {\n                themeContainer.classList.add('theme-retro');\n            } else if (selectedSkin === 'partyvibe') {\n                themeContainer.classList.add('theme-party');\n            } else {\n                themeContainer.classList.add('theme-classic');\n            }\n\n            timerSkin.src = `static/skins/${selectedSkin}.svg`;\n\n// Set the text in the p element\n            currentSkin = selectedSkin;\n            const friendlyName = themeNames[currentSkin] || 'Unknown';\n            activeThemeText.textContent = `Active Theme: ${friendlyName}`;\n\n            hideElement(skinSelector);\n            timerContainer.focus();\n        });", "            selectSkinOption(option);\n            hideElement(skinSelector);\n            timerContainer.focus();\n        });")
text = text.replace("};\n\n    skinOptions.forEach(option => {\n        option.addEventListener('click', (event) => {\n            event.stopPropagation();\n\n            selectSkinOption(option);\n            hideElement(skinSelector);\n            timerContainer.focus();\n        });\n    });", "};\n\n    skinOptions.forEach((option, index) => {\n        option.addEventListener('click', (event) => {\n            event.stopPropagation();\n            focusSkinOption(index);\n            selectSkinOption(option);\n            hideElement(skinSelector);\n            timerContainer.focus();\n        });\n\n        option.addEventListener('keydown', (event) => {\n            const currentIndex = skinOptions.indexOf(option);\n            let handled = false;\n            if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {\n                const nextIndex = (currentIndex + 1) % skinOptions.length;\n                focusSkinOption(nextIndex);\n                handled = true;\n            } else if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\n                const prevIndex = (currentIndex - 1 + skinOptions.length) % skinOptions.length;\n                focusSkinOption(prevIndex);\n                handled = true;\n            } else if (event.key === 'Home') {\n                focusSkinOption(0);\n                handled = true;\n            } else if (event.key === 'End') {\n                focusSkinOption(skinOptions.length - 1);\n                handled = true;\n            } else if (event.key === ' ' || event.key === 'Enter') {\n                selectSkinOption(option);\n                hideElement(skinSelector);\n                timerContainer.focus();\n                handled = true;\n            }\n\n            if (handled) {\n                event.preventDefault();\n            }\n        });\n    });")
path.write_text(text, encoding='utf-8')